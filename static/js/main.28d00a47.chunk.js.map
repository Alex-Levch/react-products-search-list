{"version":3,"sources":["components/api/api.js","components/Form/Form.jsx","components/PriceSlider/PriceSlider.jsx","components/ProductFilter/ProductFilter.jsx","components/PageNumbers/PageNumbers.jsx","components/ProductsList/ProductsList.jsx","App.jsx","index.jsx"],"names":["BASE_URL","sendDataToServer","email","password","a","fetch","method","dataToServer","json","result","accessToken","access_token","key","value","localStorage","setItem","getProductsFromServer","page","api_token","getItem","productsFromServer","Form","setEmail","setPassword","setIsLogined","sendData","errorMessage","response","handleSubmitForm","useCallback","e","preventDefault","action","className","onSubmit","type","placeholder","required","onChange","target","onClick","PriceSlider","minPriceValue","setMinPriceValue","maxPriceValue","setMaxPriceValue","console","log","inputLeft","document","getElementById","inputRight","thumbLeft","querySelector","thumbRight","range","min","max","id","onInput","_this","parseInt","Math","percent","style","left","onMouseOver","classList","add","onMouseOut","remove","onMouseDown","onMouseUp","right","ProducFilter","titleValue","setTitleValue","applyTitleQuery","PageNumbers","pages","setCurrentPage","currentPage","useState","pageNumberLimit","maxPageNumberLimit","setMaxPageNumberLimit","minPageNumberLimit","setMinPageNumberLimit","handleChangePage","Number","prevState","disabled","map","number","classNames","pages__item_active","length","ProductsList","products","productsPerPage","i","ceil","push","indexOfLastItem","indexOfFirstItem","currentItems","slice","product","title","price","thumbnail","App","setProducts","isLogined","appliedQuery","setAppliedQuery","useEffect","f","delay","timerId","clearTimeout","args","setTimeout","debounce","titleFilter","toLocaleLowerCase","includes","filteredByTitleProducts","useMemo","filter","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.28d00a47.chunk.js","sourcesContent":["\nexport const BASE_URL = 'http://dummy-api.d0.acom.cloud/';\n\nconst setToLocalStorage = (key, value) => {\n  localStorage.setItem(key, value)\n};\n\nconst getFromLocalStorage = (key) => {\n  return localStorage.getItem(key)\n};\n\n  // admin@test.com\n  // admin123\n\nexport const sendDataToServer = async (email, password) => {\n  try {\n    const dataToServer = await fetch(\n      `${BASE_URL}api/auth/login?email=${email}&password=${password}`,\n      {\n        method: 'POST',\n      })\n\n      const result = await dataToServer.json();\n      const accessToken = result.access_token;\n      setToLocalStorage('token', accessToken)\n\n      return true;\n  } catch {\n    return false;\n  }\n}\n\nexport const getProductsFromServer = async (page) => {\n  let api_token = getFromLocalStorage('token')\n\n  // console.log(api_token);\n\n  const productsFromServer = await fetch(\n    `${BASE_URL}api/products?page=${page}`,\n    {\n      method: 'GET',\n      access_token: api_token,\n      // headers: {'Authorization': `Bearer ${token.access_token}`,\n      // \"Access-Control-Allow-Origin\" : \"*\",\n      // \"Access-Control-Allow-Credentials\" : true},\n      // headers: {\n        // token: api_token,\n        // 'Content-Type': 'application/json',\n        // 'Access-Control-Allow-Origin': '*',\n        // mode: 'no-cors',\n      // }\n    }\n  )\n\n  // console.log(productsFromServer);\n\n    const result2 = await productsFromServer.json();\n\n    // console.log(result2);\n}\n\ngetProductsFromServer(1)\n\nconst logoutFromSite = async () => { // for button \"LEAVE\"\n  return await fetch(\n    `${BASE_URL}auth/logout`,\n    {\n      method: 'POST',\n    }\n  )\n}\n\nconst refresh = async () => {\n  return await fetch(\n    `${BASE_URL}/api/auth/refresh`,\n    {\n      method: 'POST',\n    }\n  )\n}\n\n// const request = async (path) => {\n//   const response = await fetch(`${BASE_URL}api/${path}`);\n//   const result = await response.json();\n\n//   return result;\n// }\n\nexport const getProducts = () => request('products');\nexport const getAuthorization = () => request(`auth/login?${email}&password=${password}`);","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { sendDataToServer, getProductsFromServer } from '../api/api';\n\nimport './form.scss';\n\nexport const Form = ({\n  email,\n  password,\n  setEmail,\n  setPassword,\n  setIsLogined,   /// for sendDataToServer const func = async () => {}\n  errorMessage,\n}) => {\n\n  const sendData = async () => {\n    const response = sendDataToServer(email, password);\n    setIsLogined(response);\n  }\n\n  const handleSubmitForm = useCallback((e) => {\n    e.preventDefault();\n    sendData();\n  }, [email, password]);\n\n  return (\n    <form\n      action=\"\"\n      className=\"form\"\n      onSubmit={handleSubmitForm}\n    >\n      <div className=\"form__login\">\n        <input\n          type=\"text\"\n          className=\"form__login-field\"\n          value={email}\n          placeholder=\"Enter login *\"\n          required\n          onChange={({ target }) => {\n            setEmail(target.value)\n          }}\n        />\n      </div>\n      <div className=\"form__password\">\n        <input\n          type=\"password\"\n          className=\"form__password-field\"\n          value={password}\n          placeholder=\"Enter password *\"\n          required\n          onChange={({ target }) => {\n            setPassword(target.value)\n          }}\n        />\n      </div>\n      <button\n        type=\"submit\"\n        className=\"form__button\"\n      >\n        Enter\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => {\n          getProductsFromServer(1)\n        }}\n      >\n        Show products data\n      </button>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  email: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  errorMessage: PropTypes.bool.isRequired,\n\n  setEmail: PropTypes.func.isRequired,\n  setPassword: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './priceSlider.scss';\n\nexport const PriceSlider = ({\n  minPriceValue,\n  setMinPriceValue,\n  maxPriceValue,\n  setMaxPriceValue,\n}) => {\n\n  console.log(minPriceValue, maxPriceValue);\n\n  const handleMinPriceChange = ({ target }) => {\n    setMinPriceValue(target.value)\n  }\n\n  const handleMaxPriceChange = ({ target }) => {\n    setMaxPriceValue(target.value)\n  }\n\n\n  const inputLeft = document.getElementById(\"range-field-left\");\n  const inputRight = document.getElementById(\"range-field-right\");\n\n  const thumbLeft = document.querySelector(\".slider__thumb-left\");\n  const thumbRight = document.querySelector(\".slider__thumb-right\");\n  const range = document.querySelector(\".slider__range\");\n\nconst setLeftValue = () => {\n  const _this = inputLeft,\n    min = parseInt(_this.min),\n    max = parseInt(_this.max);\n\n  _this.value = Math.min(parseInt(_this.value), parseInt(inputRight.value) - 1);\n\n  const percent = ((_this.value - min) / (max - min)) * 100;\n\n  thumbLeft.style.left = `${percent }%`;\n  range.style.left = `${percent}%`;\n};\n\nconst setRightValue = () => {\n  const _this = inputRight,\n    min = parseInt(_this.min),\n    max = parseInt(_this.max);\n\n  _this.value = Math.max(parseInt(_this.value), parseInt(inputLeft.value) + 1);\n\n  const percent = ((_this.value - min) / (max - min)) * 100;\n\n  thumbRight.style.right = `${100 - percent }%`;\n  range.style.right = `${100 - percent}%`;\n};\n\nconst mouseOverLeft = () => {\n  thumbLeft.classList.add(\"hover\");\n};\n\nconst mouseOutLeft = () => {\n  thumbLeft.classList.remove(\"hover\");\n};\n\nconst mouseDownLeft = () => {\n  thumbLeft.classList.add(\"active\");\n};\n\nconst mouseUpLeft = () => {\n  thumbLeft.classList.remove(\"active\");\n};\n\nconst mouseOverRight = () => {\n  thumbRight.classList.add(\"hover\");\n};\n\nconst mouseOutRight = () => {\n  thumbRight.classList.remove(\"hover\");\n};\n\nconst mouseDownRight = () => {\n  thumbRight.classList.add(\"active\");\n};\n\nconst mouseUpRight = () => {\n  thumbRight.classList.remove(\"active\");\n};\n\n  return (\n    <div className=\"middle price-container\">\n        <p className=\"priceValues\">\n          <span className=\"priceValues__label\">\n            From:\n          </span>\n          <span\n            className=\"priceValues__value\"\n          >\n            {minPriceValue}\n          </span>\n          <span className=\"priceValues__label\">\n            To:\n          </span>\n          <span\n            className=\"priceValues__value\"\n          >\n            {maxPriceValue}\n          </span>\n        </p>\n      <div className=\"middle__multi-slider\">\n        <input\n          value={minPriceValue}\n          min=\"0\"\n          max=\"500\"\n          type=\"range\"\n          className=\"middle__min-value middle__range\"\n          id=\"range-field-left\"\n          onChange={handleMinPriceChange}\n          onInput={setLeftValue}\n          onMouseOver={mouseOverLeft}\n          onMouseOut={mouseOutLeft}\n          onMouseDown={mouseDownLeft}\n          onMouseUp={mouseUpLeft}\n        />\n        <input\n          value={maxPriceValue}\n          min=\"0\"\n          max=\"500\"\n          type=\"range\"\n          className=\"middle__max-value middle__range\"\n          id=\"range-field-right\"\n          onChange={handleMaxPriceChange}\n          onInput={setRightValue}\n          onMouseOver={mouseOverRight}\n          onMouseOut={mouseOutRight}\n          onMouseDown={mouseDownRight}\n          onMouseUp={mouseUpRight}\n        />\n      </div>\n\n      <div className=\"slider\">\n        <div className=\"slider__track\"></div>\n        <div className=\"slider__range\"></div>\n        <div className=\"slider__thumb slider__thumb-left\">\n          <div className=\"slider__thumb-circle\"></div>\n        </div>\n        <div className=\"slider__thumb slider__thumb-right\">\n          <div className=\"slider__thumb-circle\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nPriceSlider.propTypes = {\n  minPriceValue: PropTypes.string.isRequired,\n  maxPriceValue: PropTypes.string.isRequired,\n\n  setMinPriceValue: PropTypes.func.isRequired,\n  setMaxPriceValue: PropTypes.func.isRequired,\n};\n\n","import React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { PriceSlider } from '../PriceSlider';\n\nimport './productFilter.scss';\n\n// const useLocalStorage = (key, initialValue) => {\n//   const [value, setValue] = useState(\n//     JSON.parse(localStorage.getItem(key)) || initialValue\n//   );\n\n//   const save = (value) => {\n//     setValue(value);\n//     localStorage.setItem(key, JSON.stringify(value));\n//   };\n\n//   return [value, save]\n// }\n\n\nexport const ProducFilter = ({\n  titleValue,\n  setTitleValue,\n  applyTitleQuery,\n  minPriceValue,\n  setMinPriceValue,\n  maxPriceValue,\n  setMaxPriceValue,\n}) => {\n// const [token, setToken] = useLocalStorage('')\n\n// const {nameQuery, dateQuery, priceRange} = searchParameters;\n\nconst handleTitleChange = ({ target }) => {\n  setTitleValue(target.value);\n  applyTitleQuery(target.value)\n}\n\n  // const handleSubmitChange = (e) => {\n  //   e.preventDefault();\n  // }\n\n  console.log(minPriceValue, maxPriceValue);\n\n  return (\n    <form\n      className=\"product-filter\"\n      // onSubmit={}\n    >\n      <label\n        className=\"product-filter__title-label\"\n      >\n        <input\n          type=\"text\"\n          className=\"product-filter__title-field\"\n          placeholder=\"Search\"\n          value={titleValue}\n          onChange={handleTitleChange}\n        />\n      </label>\n      <div\n        className=\"product-filter__date-container\"\n      >\n        <input\n          type=\"date\"\n          className=\"product-filter__date-from\"\n        />\n      </div>\n      <PriceSlider\n        minPriceValue={minPriceValue}\n        setMinPriceValue={setMinPriceValue}\n        maxPriceValue={maxPriceValue}\n        setMaxPriceValue={setMaxPriceValue}\n      />\n      {/* <div className=\"middle\">\n        <div className=\"middle__multi-slider\">\n          <input\n            value={minPriceValue}\n            min=\"0\"\n            max=\"500\"\n            type=\"range\"\n            className=\"middle__min-value middle__range\"\n            id=\"range-field-left\"\n            onChange={handleMinPriceChange}\n            onInput={setLeftValue}\n            onMouseOver={mouseOverLeft}\n            onMouseOut={mouseOutLeft}\n            onMouseDown={mouseDownLeft}\n            onMouseUp={mouseUpLeft}\n          />\n          <input\n            value={maxPriceValue}\n            min=\"0\"\n            max=\"500\"\n            type=\"range\"\n            className=\"middle__max-value middle__range\"\n            id=\"range-field-right\"\n            onChange={handleMaxPriceChange}\n            onInput={setRightValue}\n            onMouseOver={mouseOverRight}\n            onMouseOut={mouseOutRight}\n            onMouseDown={mouseDownRight}\n            onMouseUp={mouseUpRight}\n          />\n        </div>\n\n        <div className=\"slider\">\n          <div className=\"slider__track\"></div>\n          <div className=\"slider__range\"></div>\n          <div className=\"slider__thumb slider__thumb-left\">\n            <div className=\"slider__thumb-circle\"></div>\n          </div>\n          <div className=\"slider__thumb slider__thumb-right\">\n            <div className=\"slider__thumb-circle\"></div>\n          </div>\n        </div>\n      </div> */}\n    </form>\n  );\n};\n\nProducFilter.propTypes = {\n  titleValue: PropTypes.string.isRequired,\n  minPriceValue: PropTypes.string.isRequired,\n  maxPriceValue: PropTypes.string.isRequired,\n\n  setTitleValue: PropTypes.func.isRequired,\n  applyTitleQuery: PropTypes.func.isRequired,\n\n  setMinPriceValue: PropTypes.func.isRequired,\n  setMaxPriceValue: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames'\n\nimport './pageNumbers.scss';\n\nexport const PageNumbers = ({\n  pages,\n  setCurrentPage,\n  currentPage,\n}) => {\n\n  const [pageNumberLimit, setPageNumberLimit] = useState(5);\n  const [maxPageNumberLimit, setMaxPageNumberLimit] = useState(5);\n  const [minPageNumberLimit, setMinPageNumberLimit] = useState(0);\n\n  const handleChangePage = ({ target }) => {\n    setCurrentPage(Number(target.id))\n  }\n\n  const increase = () => {\n    setCurrentPage(prevState => prevState + 1);\n\n    if (currentPage + 1 > maxPageNumberLimit) {\n      setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit)\n      setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit)\n    }\n  }\n\n  const decrease = () => {\n    setCurrentPage(prevState => prevState - 1);\n\n    if ((currentPage - 1) % pageNumberLimit === 0) {\n      setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit)\n      setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit)\n    }\n  }\n\n  // (number < maxPageNumberLimit + 1 && number > minPageNumberLimit)\n\n  return (\n\n    <div\n      className=\"pages\"\n    >\n      <button\n        type=\"button\"\n        className=\"pages__button pages__button-decrease\"\n        onClick={decrease}\n        disabled={currentPage === 1}\n      >\n        Previous\n      </button>\n      <ul\n        className=\"pages__list\"\n      >\n        {pages.map(number => {\n          if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n            return (\n              <li\n                key={number}\n                id={number}\n                className={classNames('pages__item', {\n                  pages__item_active: currentPage === number,\n                })}\n                onClick={handleChangePage}\n              >\n                {number}\n              </li>\n            )\n          } else {\n            return null;\n          }\n        })}\n      </ul>\n      <button\n        type=\"button\"\n        className=\"pages__button pages__button-increase\"\n        onClick={increase}\n        disabled={currentPage === pages.length}\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nPageNumbers.propTypes = {\n  pages: PropTypes.arrayOf(\n    PropTypes.number.isRequired,\n  ).isRequired,\n\n  currentPage: PropTypes.number.isRequired,\n\n  setCurrentPage: PropTypes.func.isRequired,\n}\n\n\n","import React, { useState } from 'react';\nimport { ProductCard } from '../ProductCard';\nimport { PageNumbers } from '../PageNumbers';\n\nimport './productsList.scss';\n\nexport const ProductsList = ({ products }) => {\n  // const [products, setProducts] = useState([]);\n  // const [productLimit, setProductLimit] = useState(6);\n  // const [offSet, setOffSet] = useState(0);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [productsPerPage, setProductsPerPage] = useState(6);\n\n  const pages = [];\n  for (let i = 1; i <= Math.ceil(products.length/productsPerPage); i++) {\n    pages.push(i);\n  }\n\n  const indexOfLastItem = currentPage * productsPerPage;\n  const indexOfFirstItem = indexOfLastItem - productsPerPage;\n  const currentItems = products.slice(indexOfFirstItem, indexOfLastItem);\n\n  return (\n    <div className=\"products container\">\n      <ul className=\"products__list\">\n        {currentItems.map(product => (\n          <li\n            key={product.id}\n            className=\"product\"\n          >\n            <h3 className=\"product__title\">\n              {product.title}\n            </h3>\n            <p className=\"product__price\">\n              {product.price} грн.\n            </p>\n            <p className=\"product__thumbnail\">\n              {product.thumbnail}\n            </p>\n            {/* <ProductCard\n              {...product}\n            /> */}\n          </li>\n        ))}\n      </ul>\n      <PageNumbers\n        pages={pages}\n        setCurrentPage={setCurrentPage}\n        currentPage={currentPage}\n      />\n    </div>\n  );\n};\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { getProducts, BASE_URL } from './components/api/api';\nimport productsFromServer from './components/api/products.json';\nimport { Form } from './components/Form';\nimport { ProducFilter } from './components/ProductFilter';\nimport { ProductList } from './components/ProductsList';\n\n\nimport './App.scss';\nimport { ProductsList } from './components/ProductsList/ProductsList';\n\nconst debounce = (f, delay) => {\n  let timerId;\n  return (...args) => {\n    clearTimeout(timerId)\n    timerId = setTimeout(f, delay, ...args);\n  };\n};\n\nexport const App = () => {\n  const [products, setProducts] = useState([]);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLogined, setIsLogined] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(true);\n  const [titleValue, setTitleValue] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n  // const [dataValue, setDataValue] = useState('');\n  const [minPriceValue, setMinPriceValue] = useState('120');\n  const [maxPriceValue, setMaxPriceValue] = useState('370');\n\n  useEffect(() => {\n    setProducts([...productsFromServer])\n  }, []);\n\n  // useEffect(() => {\n    // loadProductsFromServer();\n  // }, []);\n\n  // const visibleProducts = useMemo(() => products.filter((product) => {\n  //   const { titleValue, priceValue, dataValue } = activeSearchParameters;\n  //   const { title, price, date} = product;\n  // }), [])\n\n  const applyTitleQuery = debounce(setAppliedQuery, 1000);\n  // const applyPriceQuery = debounce(setPriceValue, 1000);\n\n  const titleFilter = product => (\n    product.title === null\n      ? product.title\n      : (product.title.toLocaleLowerCase())\n        .includes(appliedQuery.toLocaleLowerCase())\n  );\n\n  const priceFilter = product => (\n    product.price > +priceValue\n    ? true\n    : false\n  );\n\n  const filteredByTitleProducts = useMemo(() => {\n    return products\n    .filter(titleFilter);\n  }, [appliedQuery])\n\n  // const filteredByPriceProducts = useMemo(() => {\n\n  //   if (filteredByTitleProducts.length) {\n  //     return filteredByTitleProducts\n  //     .filter(priceFilter)\n  //   }\n\n  //   return products\n  //     .filter(priceFilter)\n  // }, [priceValue])\n\n  return (\n  <div className=\"app\">\n    {!isLogined && (\n      <Form\n        email={email}\n        setEmail={setEmail}\n        password={password}\n        setPassword={setPassword}\n        errorMessage={errorMessage}\n        setIsLogined={setIsLogined}\n        isLogined={isLogined}\n      />\n    )}\n    <ProducFilter\n      setTitleValue={setTitleValue}\n      titleValue={titleValue}\n      applyTitleQuery={applyTitleQuery}\n      minPriceValue={minPriceValue}\n      setMinPriceValue={setMinPriceValue}\n      maxPriceValue={maxPriceValue}\n      setMaxPriceValue={setMaxPriceValue}\n    />\n    <ProductsList\n      products={filteredByTitleProducts.length ? filteredByTitleProducts : products}\n    />\n  </div>\n  );\n};\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}